<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/**/*.xml
	    <!-- ,classpath:timertask.xml -->
	    </param-value>
	</context-param>

	<filter>
		<filter-name>webwork</filter-name>
		<filter-class>com.opensymphony.webwork.dispatcher.FilterDispatcher</filter-class>
	</filter>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>requestContextFilter</filter-name>
		<filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
	</filter>

	<filter>
		<filter-name>ecsideExport</filter-name>
		<filter-class>org.ecside.filter.ECSideFilter</filter-class>
		<init-param>
			<param-name>useEasyDataAccess</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>useEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>webwork</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>requestContextFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ecsideExport</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.directwebremoting.servlet.DwrListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.suntendy.queue.util.cache.InitCacheListener</listener-class>
	</listener>
	<!-- <listener> <listener-class>com.suntendy.queue.util.RestartIeListener</listener-class> 
		</listener> -->
	<!-- <listener> <listener-class>com.suntendy.queue.queue.action.GqTimerListener</listener-class> 
		</listener> -->
	<servlet>
		<servlet-name>WindowWS</servlet-name>
		<servlet-class>com.sun.xml.ws.transport.http.servlet.WSSpringServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>QueueOut</servlet-name>
		<servlet-class>com.sun.xml.ws.transport.http.servlet.WSSpringServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>QueueForImage</servlet-name>
		<servlet-class>com.sun.xml.ws.transport.http.servlet.WSSpringServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>

		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>

		<init-param>
			<param-name>allowGetForSafariButMakeForgeryEasier</param-name>
			<param-value>true</param-value>
		</init-param>

		<init-param>
			<param-name>crossDomainSessionSecurity</param-name>
			<param-value>false</param-value>
		</init-param>

		<init-param>
			<param-name>allowScriptTagRemoting</param-name>
			<param-value>true</param-value>
		</init-param>

		<!-- dwr的comet控制 -->
		<init-param>
			<param-name>pollAndCometEnabled</param-name>
			<param-value>true</param-value>
		</init-param>

		<init-param>
			<param-name>classes</param-name>
			<param-value>java.lang.Object</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>WindowWS</servlet-name>
		<url-pattern>/ws/OpenInter</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>QueueOut</servlet-name>
		<url-pattern>/services/QueueOutAccess</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>QueueForImage</servlet-name>
		<url-pattern>/services/QueueForImage</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	
	 <error-page>
        <error-code>401</error-code>
        <location>/errorpage/401.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/errorpage/403.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/errorpage/404.jsp</location>
    </error-page> 
    <error-page>
        <error-code>500</error-code>
        <location>/errorpage/500.jsp</location>
    </error-page>
    <session-config>
		<session-timeout>1</session-timeout>
	</session-config>
</web-app>
